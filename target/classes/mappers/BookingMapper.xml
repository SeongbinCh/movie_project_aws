<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="com.project.movie.booking.Mybatis.BookingMapper">
	<resultMap type="com.project.movie.booking.DTO.BookingDTO" id="booking">
		<result property="seatId" column="seatId"/>
        <result property="rowName" column="rowName"/>
        <result property="colNumber" column="colNumber"/>
        <result property="isReserved" column="isReserved"/>
        <result property="movieCd" column="movieCd"/>
        <result property="showtimeId" column="showtimeId"/>
        <result property="memberId" column="memberId"/>
	</resultMap>
	
	<resultMap type="com.project.movie.booking.DTO.BookingListDTO" id="bookingList">
	    <result property="movieName" column="movieName"/>
	    <result property="movieShowDate" column="movieShowDateFormatted"/>
	    <result property="movieShowTime" column="movieShowTime"/>
	    <result property="seatInfo" column="seatInfo"/>
	</resultMap>
	
	<!-- movieCd와 showtimeId에 해당하는 좌석 목록 조회 -->
	<select id="getSeatsByMovieAndShowtime" parameterType="map" resultType="com.project.movie.booking.DTO.BookingDTO">
		SELECT seatId, rowName, colNumber, isReserved
		FROM movie_seat
		WHERE movieCd = #{movieCd} AND showtimeId = #{showtimeId}
	</select>
	
	<!-- 좌석이 이미 예약 되어있는지 확인 -->
	<select id="checkSeat" resultType="int">
		SELECT count(*)
		FROM movie_seat
		WHERE seatId = #{seatId} AND movieCd = #{movieCd} AND showtimeId = #{showtimeId} AND isReserved = 1
	</select>
	
	<!-- 좌석 예약 처리 -->
	<update id="updateSeatReservation">
		UPDATE movie_seat
		SET isReserved = 1, memberId = #{memberId}
		WHERE seatId = #{seatId} AND movieCd = #{movieCd} AND showtimeId = #{showtimeId}
	</update>
	
	<!-- 예매 목록 조회 -->
	<select id="getBookingList" parameterType="int" resultMap="bookingList">
		SELECT	
			ms.movieName, 
			DATE_FORMAT(mss.movieShowDate, '%Y-%m-%d') AS movieShowDateFormatted, 
			mss.movieShowTime, 
			GROUP_CONCAT(CONCAT(msa.rowName, msa.colNumber) ORDER BY msa.rowName, msa.colNumber SEPARATOR ', ') AS seatInfo
		FROM movie_seat msa
		JOIN movie_showtime mss ON msa.showtimeId = mss.showtimeId
		JOIN movie ms ON mss.movieCd = ms.movieCd
		WHERE msa.memberId = #{memberId}
		GROUP BY ms.movieName, mss.movieShowDate, mss.movieShowTime
		ORDER BY mss.movieShowDate DESC, mss.movieShowTime DESC
	</select>
	
	<!-- 예약 취소 처리 -->
	<delete id="cancelBooking" parameterType="String">
		DELETE FROM movie_seat
		WHERE seatId = #{seatId} AND memberId IS NOT NULL
	</delete>
	
	<delete id="deleteBooking">
		DELETE FROM movie_seat
		WHERE memberId = #{memberId}
	</delete>
</mapper>